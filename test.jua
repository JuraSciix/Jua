fn bench_stub() {
    max = 1e9;
    while true {
        a = ns_time();
        for i = 0; i < 1_000_000; i++ {
            test_stub();
        }
        b = ns_time();
        m = (b - a);
        if m < max {
            print_bench_data({
                'name': 'Stub bench',
                'score': m
            });
            max = m;
        }
    }
}

fn test_stub() {

}

fn print_bench_data(bench_data) {
    name = bench_data.name ?? "<unknown>";
    i    = bench_data.i ?? "?";
    c    = bench_data.i ?? "?";
    println("=== " + name + " (" + i + "/" + c + ") ===");

    scores = bench_data.time ??
                bench_data.times ??
                bench_data.score ??
                bench_data.scores ??
                [];
    if array_index_of(['map', 'array'], typeof(scores)) < 0 {
        scores = [scores];
    } else if length(scores) == 0 {
        println("<there is no scores>");
        return;
    }
    score_b = array_min(scores);                                  /* best */
    score_w = array_max(scores);                                  /* worst */
    units_h = 1E9 / (score_b == 0 ? 1 : score_b);                 /* highest */
    units_l = 1E9 / (score_w == 0 ? 1 : score_w);                 /* lowest */
    units_a = (units_l + units_h) / 2;                            /* average */
    units_r = ((units_a - units_l) + (units_h - units_a)) / 2;    /* error rate */
    println("score: " + round(units_a, 3) + "Â±" + round(units_r, 3) + " op/sec");
}

fn array_index_of(arr, elem, start = 0) {
    for l = length(arr), i = start; i < l; i++ {
        if arr[i] == elem {
            return i;
        }
    }
    return -1;
}

fn array_max(arr) {
    m = arr[0];
    for i = 1, l = length(arr); i < l; i++ {
        if (e = arr[i]) > m {
            m = e;
        }
    }
    return m;
}

fn array_min(arr) {
    m = arr[0];
    for i = 1, l = length(arr); i < l; i++ {
        if (e = arr[i]) < m {
            m = e;
        }
    }
    return m;
}

bench_stub();